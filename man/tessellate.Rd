% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tessellate.R
\name{tessellate}
\alias{tessellate}
\title{tessellate}
\usage{
tessellate(
  x,
  x_min = NA,
  x_max = NA,
  y_min = NA,
  y_max = NA,
  z_min = NA,
  z_max = NA,
  output_definition = "\%i*\%P*\%t",
  options = "-v",
  voro_path = "voro++"
)
}
\arguments{
\item{x}{data.table/data.frame with the input points described by four variables (named columns):
\itemize{
  \item id: id number that is passed to the output polygon (integer)
  \item x: x-axis coordinate (numeric)
  \item y: y-axis coordinate (numeric)
  \item z: z-axis coordinate (numeric)
}
Note that tesselate assumes that the values given as x, y and z are comparable in units.
If you input spatio-temporal data, make sure that you have units that determine your 3D distance
metric the way you intend it to be. For example, if you need 1km=1year, use those units in the input. 
Otherwise, rescale appropriately.}

\item{x_min}{minimum x-axis coordinate of the tessellation box. Default: min(x)}

\item{x_max}{maximum x-axis coordinate of the tessellation box. Default: max(x)}

\item{y_min}{minimum y-axis coordinate of the tessellation box. Default: min(y)}

\item{y_max}{maximum y-axis coordinate of the tessellation box. Default: max(y)}

\item{z_min}{minimum z-axis coordinate of the tessellation box. Default: min(z)}

\item{z_max}{maximum z-axis coordinate of the tessellation box. Default: max(z)}

\item{output_definition}{string that describes how the output file of voro++ should be structured.
This is passed to the -c option of the command line interface. All possible customization options
are documented \href{http://math.lbl.gov/voro++/doc/custom.html}{here}. Default: "\%i*\%P*\%t"}

\item{options}{string with additional options passed to voro++. All options are documented
\href{http://math.lbl.gov/voro++/doc/cmd.html}{here}. Default: "-v"}

\item{voro_path}{system path to the voro++ executable. Default: "voro++"}
}
\value{
raw, linewise output of voro++ in a character vector
}
\description{
Command line utility wrapper for the \href{http://math.lbl.gov/voro++}{voro++} software library.
voro++ must be installed on your system to use this function.
}
\examples{
random_unique_points <- unique(data.table::data.table(
  id = NA,
  x = runif(10),
  y = runif(10),
  z = runif(10)
))
random_unique_points$id <- 1:nrow(random_unique_points)

voro_output <- tessellate(random_unique_points)

polygon_points <- read_polygon_edges(voro_output)

cut_surfaces <- cut_polygons(polygon_points, c(0.2, 0.4, 0.6))

cut_surfaces_sf <- cut_polygons_to_sf(cut_surfaces, crs = 25832)
}
